{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/author-list/author-list.component.css","webpack:///./src/app/author-list/author-list.component.html","webpack:///./src/app/author-list/author-list.component.ts","webpack:///./src/app/edit-author/edit-author.component.css","webpack:///./src/app/edit-author/edit-author.component.html","webpack:///./src/app/edit-author/edit-author.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new-author/new-author.component.css","webpack:///./src/app/new-author/new-author.component.html","webpack:///./src/app/new-author/new-author.component.ts","webpack:///./src/app/new-quote/new-quote.component.css","webpack:///./src/app/new-quote/new-quote.component.html","webpack:///./src/app/new-quote/new-quote.component.ts","webpack:///./src/app/quote-list/quote-list.component.css","webpack:///./src/app/quote-list/quote-list.component.html","webpack:///./src/app/quote-list/quote-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthorListComponent } from './author-list/author-list.component';\nimport { NewAuthorComponent } from './new-author/new-author.component';\nimport { EditAuthorComponent } from './edit-author/edit-author.component';\nimport { QuoteListComponent } from './quote-list/quote-list.component';\nimport { NewQuoteComponent } from './new-quote/new-quote.component';\n\nconst routes: Routes = [\n  { path: '',component: AuthorListComponent },\n  { path: 'newAuthor',component: NewAuthorComponent },\n  // use a colon and parameter name to include a parameter in the url\n  { path: 'edit/:id', component: EditAuthorComponent },\n  { path: 'author/quotes/:id', component: QuoteListComponent },\n  { path: 'quotes/new/:id', component: NewQuoteComponent }\n  // // the ** will catch anything that did not match any of the above routes\n  // { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"row text-align-center\\\">\\n    <div class=\\\"col-2\\\"></div>\\n    <div class=\\\"col-8\\\">\\n        <h1>Welcome to {{ title }}!</h1>\\n    </div>\\n    <div class=\\\"col-2\\\"></div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-1\\\">\\n        <button [routerLink]=\\\"['/']\\\">Home</button>\\n    </div>\\n    <div class=\\\"col-2\\\">\\n        <button [routerLink]=\\\"['/newAuthor']\\\">Add Author</button>\\n    </div>\\n  </div>\\n  <br> \\n  <router-outlet></router-outlet>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Quote Ranks';\n  authors;\n  constructor(private _httpService: HttpService, \n              private _route: ActivatedRoute,\n              private _router: Router) {\n    this.getAuthors();\n   }\n   getAuthors(){\n     console.log('Getting all of the Authors');\n     let observable = this._httpService.getAuthors();\n     observable.subscribe(data => {\n       this.authors = data['authors'];\n     })\n   }\n   ngOnInit(){\n    this._router.navigate(['/']);\n   }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpService } from './http.service';\n\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthorListComponent } from './author-list/author-list.component';\nimport { EditAuthorComponent } from './edit-author/edit-author.component';\nimport { NewAuthorComponent } from './new-author/new-author.component';\nimport { QuoteListComponent } from './quote-list/quote-list.component';\nimport { NewQuoteComponent } from './new-quote/new-quote.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthorListComponent,\n    EditAuthorComponent,\n    NewAuthorComponent,\n    QuoteListComponent,\n    NewQuoteComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <h4>Author List:</h4>\\n</div>\\n<table>\\n  <tr>\\n    <th>Author</th>\\n    <th>Actions</th>\\n  </tr>\\n  <tr *ngFor=\\\"let author of authors\\\">\\n    <td>{{author.name}}</td>\\n    <td>\\n      <button [routerLink]=\\\"['/author/quotes/'+author._id]\\\">Quotes</button>\\n      <button [routerLink]=\\\"['/edit/'+author._id]\\\">Edit</button>\\n      <button (click)=\\\"deleteAuthor(author._id)\\\">Delete</button>\\n    </td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-author-list',\n  templateUrl: './author-list.component.html',\n  styleUrls: ['./author-list.component.css']\n})\nexport class AuthorListComponent implements OnInit {\n\n  authors : any[];\n\n  constructor(private _httpService: HttpService) {\n    this.getAuthors();\n   }\n\n  ngOnInit() {\n  }\n  getAuthors(){\n    console.log(\"Get all the Authors\");\n    let observable = this._httpService.getAuthors();\n    observable.subscribe(data => {\n      console.log(data);\n      this.authors = data['authors'];\n    });\n  }\n  deleteAuthor(id){\n    let observable = this._httpService.deleteAuthor(id);\n    observable.subscribe(data =>{\n      this.getAuthors();\n    });\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (submit)=\\\"editAuthorForm()\\\" method=\\\"PUT\\\" *ngIf=\\\"author\\\">\\n    <h4>Edit: {{author.name}}</h4>\\n    name: <input type=\\\"text\\\" name=\\\"author.name\\\" [(ngModel)]=\\\"author.name\\\">\\n    <input type=\\\"submit\\\" value=\\\"Make Edits\\\">\\n</form>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-edit-author',\n  templateUrl: './edit-author.component.html',\n  styleUrls: ['./edit-author.component.css']\n})\nexport class EditAuthorComponent implements OnInit {\n\n  author;\n  id;\n\n  constructor(private _httpService: HttpService,  \n              private _route: ActivatedRoute,\n              private _router: Router) {}\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n      this.id = params['id']\n      this.getAuthorService(this.id);      \n    });    \n  }\n  getAuthorService(id){\n    let obversable = this._httpService.getAuthorBy(this.id);\n    obversable.subscribe(data=>{\n      this.author = data;\n    })\n  }\n  editAuthorForm(){\n    let obversable= this._httpService.updateAuthor(this.author);\n    obversable.subscribe(data=>{\n      console.log(\"Subscribed to Update Author Observable...\");\n      this._router.navigate(['/'])\n    });\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n  //These routes match up with restful routing in the server / config / routing.js file.\n  getAuthors(){\n    return  this._http.get('/authors');\n  }\n  getAuthorBy(id){\n   return this._http.get('/author/'+id)\n  }\n  createAuthor(newAuthorData){\n  console.log (newAuthorData);\n  return this._http.post('/authors', newAuthorData);\n  }\n  deleteAuthor(id){\n   return this._http.delete('/authors/'+id);\n  }\n  updateAuthor(data){\n   return this._http.put('/authors/edit/'+data._id, data);\n  }\n  createQuote(newQuoteData){\n    console.log(newQuoteData);\n    return this._http.put('/newQuoteBy/'+newQuoteData.author._id, newQuoteData.quote)\n  }\n  updateQuote(data){\n    return this._http.put('/updateQuote/'+data.authorId, data.quote);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <h4>Add a New Author:</h4>\\n  </div>\\n  <form (submit)=\\\"newAuthorForm()\\\" method=\\\"POST\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-2\\\">\\n        <p>Name: </p>\\n      </div>\\n      <div class=\\\"col-4\\\">\\n        <p *ngIf=\\\"errorL\\\">{{errorL.errors.name.message}}</p>\\n        <input type=\\\"text\\\" name=\\\"newAuthor.name\\\" [(ngModel)]=\\\"newAuthor.name\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-2\\\">\\n        <input type=\\\"submit\\\" value=\\\"Add Author\\\">\\n      </div>\\n    </div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-author',\n  templateUrl: './new-author.component.html',\n  styleUrls: ['./new-author.component.css']\n})\nexport class NewAuthorComponent implements OnInit {\n\n  authors : any[];\n  newAuthor = {name:\"\"}\n  errorL;\n  constructor(private _httpService: HttpService,\n              private _route: ActivatedRoute,\n              private _router: Router) { \n    this.getAuthors();\n  }\n\n  ngOnInit() {\n  \n  }\n  getAuthors(){\n\n  }\n  newAuthorForm(){\n    let observable = this._httpService.createAuthor(this.newAuthor);\n    observable.subscribe(data=>{\n      console.log(data);\n      if(data['status'] == 'errors'){\n        this.errorL = data['errors']\n        console.log(this.errorL);\n      }else{\n      this._router.navigate(['/'])\n      }\n    });\n  }\n  \n}","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"author\\\">\\n  <div class=\\\"row\\\">\\n    <h4>Provide a Quote by {{author.name}}</h4>\\n  </div>\\n    <form (submit)=\\\"newQuoteForm()\\\" method=\\\"PUT\\\">\\n        <p *ngIf=\\\"errorL\\\">{{errorL['errors']['quotes']['errors']['content']['message']}}</p>\\n        Quote: <input type=\\\"text\\\" name=\\\"newQuote.content\\\" [(ngModel)]=\\\"newQuote.content\\\">\\n        <input type=\\\"submit\\\" value=\\\"Add Quote\\\">\\n    </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-new-quote',\n  templateUrl: './new-quote.component.html',\n  styleUrls: ['./new-quote.component.css']\n})\nexport class NewQuoteComponent implements OnInit {\n\n  author;\n  authorId;\n  newQuote = {content: ''};\n  errorL;\n\n  constructor(private _httpService: HttpService,  \n              private _route: ActivatedRoute,\n              private _router: Router) {}\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n      this.authorId = params['id']\n      this.getAuthorService(this.authorId);      \n    });    \n  }\n  getAuthorService(id){\n    let obversable = this._httpService.getAuthorBy(this.authorId);\n    obversable.subscribe(data=>{\n      this.author = data;\n    })\n  }\n  newQuoteForm(){\n    let data = { author: this.author, quote: this.newQuote, }\n    console.log(data);\n    let observable = this._httpService.createQuote(data);\n    observable.subscribe(data=>{\n      if(data['status']== 'errors'){\n        this.errorL = data['errors']\n        console.log(this.errorL);\n        console.log(this.errorL['errors']['quotes']['errors']['content']['message']);\n      }else{\n        this._router.navigate(['/author/quotes/'+this.authorId]);\n      }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div *ngIf=\\\"author\\\" class=\\\"row\\\">\\n  <div class=\\\"col-3\\\">\\n      <h4>{{author.name}}</h4>\\n  </div>\\n  <div class=\\\"col-3\\\">\\n    <button [routerLink]=\\\"['/quotes/new/'+author._id]\\\">Add Quote by: {{author.name}}</button>\\n  </div>\\n</div>\\n<div *ngIf=\\\"author\\\" class=\\\"row\\\">\\n  <table>\\n    <tr>\\n      <th>Quote</th>\\n      <th>Voters</th>\\n      <th>Actions</th>\\n    </tr>\\n    <tr *ngFor=\\\"let quote of author.quotes\\\">\\n      <td>{{quote.content}}</td>\\n      <td>{{quote.votes}}</td>\\n      <td>\\n        <button (click)=\\\"upVoteQuote(quote)\\\">Up Vote</button>\\n        <button (click)=\\\"downVoteQuote(quote)\\\">Down Vote</button>\\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-quote-list',\n  templateUrl: './quote-list.component.html',\n  styleUrls: ['./quote-list.component.css']\n})\nexport class QuoteListComponent implements OnInit {\n\n\n  author;\n  authorId;\n\n  constructor(private _httpService: HttpService,  \n              private _route: ActivatedRoute,\n              private _router: Router) {}\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n      this.authorId = params['id']\n      this.getAuthorService(this.authorId);      \n      });    \n  }\n  getAuthorService(id){\n    let obversable = this._httpService.getAuthorBy(this.authorId);\n    obversable.subscribe(data=>{\n      this.author = data;\n      console.log(data);\n    });\n  }\n  upVoteQuote(quote){\n    console.log(\"UpVote\")\n    quote.votes++\n    let context = {authorId: this.authorId, quote: quote}\n    let obversable = this._httpService.updateQuote(context);\n    obversable.subscribe(data=>{\n      console.log(data);\n    })    \n  }\n  downVoteQuote(quote){\n    console.log(\"DownVote\")\n    quote.votes--\n    let context = {authorId: this.authorId, quote: quote}\n    let obversable = this._httpService.updateQuote(context);\n    obversable.subscribe(data=>{\n      console.log(data);\n    })    \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}